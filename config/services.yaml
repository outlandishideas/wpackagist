# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    wpackagist.packages.path: '%env(resolve:PACKAGE_PATH)%' # Not used any more except for a subset of local dev.

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    request_metadata:
        class: Doctrine\ORM\Mapping\ClassMetadata
        arguments:
            $entityName: Outlandish\Wpackagist\Entity\Request

    Doctrine\ORM\Configuration:
        alias: 'doctrine.orm.default_configuration'

    Doctrine\ORM\EntityManagerInterface:
        alias: Outlandish\Wpackagist\Persistence\RetrySafeEntityManager

    doctrine.orm.default_entity_manager:
        alias: Outlandish\Wpackagist\Persistence\RetrySafeEntityManager
        public: true

    doctrine.orm.default_entity_manager.abstract:
        alias: Outlandish\Wpackagist\Persistence\RetrySafeEntityManager
        public: true

    Outlandish\Wpackagist\Entity\RequestRepository:
        arguments:
            $class: '@request_metadata'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Outlandish\Wpackagist\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    Outlandish\Wpackagist\Storage\PackageStore:
        alias: Outlandish\Wpackagist\Storage\Database

    Outlandish\Wpackagist\Storage\Filesystem:
        arguments: ['%wpackagist.packages.path%']

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Outlandish\Wpackagist\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Outlandish\Wpackagist\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
